# handlers/book_handlers.py

from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
import sqlite3
from datetime import datetime
import logging

logger = logging.getLogger(__name__)

# --- –ò–º–ø–æ—Ä—Ç –º–µ–Ω—é ---
try:
    from config import MAIN_MENU
except ImportError:
    logger.critical("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª config.py")
    raise


# --- –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–Ω–∏–≥ ---
async def list_books(update: Update, context: ContextTypes.DEFAULT_TYPE):
    conn = None
    try:
        conn = sqlite3.connect('library.db')
        cur = conn.cursor()
        cur.execute("SELECT id, title, author, year, inventory_number FROM books WHERE quantity > 0")
        rows = cur.fetchall()
        msg = "üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–Ω–∏–≥–∏:\n"
        for row in rows:
            msg += f"ID: {row[0]} ‚Äî {row[1]} ({row[2]}, {row[3]}, ‚Ññ{row[4]})\n"
        await update.message.reply_text(msg or "–ö–Ω–∏–≥ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏.", reply_markup=MAIN_MENU)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–Ω–∏–≥: {e}")
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–Ω–∏–≥.")
    finally:
        if conn:
            conn.close()